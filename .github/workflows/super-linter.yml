#!/bin/bash
# scripts/build.sh - Local build script

set -e

echo "🔨 Building testing_ci-cp..."

# Create build directory
mkdir -p build
cd build

# Configure and build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . --config Release

echo "✅ Build completed successfully!"

# Test the executable
echo "🧪 Testing executable..."
if [ -f "./main" ]; then
    ./main
    echo "✅ main executable works!"
elif [ -f "./testing_ci-cp" ]; then
    ./testing_ci-cp
    echo "✅ testing_ci-cp executable works!"
elif [ -f "./Release/main.exe" ]; then
    ./Release/main.exe
    echo "✅ main.exe executable works!"
elif [ -f "./Release/testing_ci-cp.exe" ]; then
    ./Release/testing_ci-cp.exe
    echo "✅ testing_ci-cp.exe executable works!"
else
    echo "❌ No executable found!"
    ls -la
    exit 1
fi

---
#!/bin/bash
# scripts/deploy.sh - Deployment preparation script

set -e

VERSION=${1:-"v1.0.0"}
echo "📦 Preparing deployment package for version $VERSION..."

# Create deployment directory
mkdir -p deploy/testing_ci-cp-$VERSION/{bin,src}

# Copy executables if they exist
echo "Copying executables..."
find build -name "main" -o -name "testing_ci-cp" -o -name "*.exe" | while read file; do
    if [ -f "$file" ]; then
        cp "$file" "deploy/testing_ci-cp-$VERSION/bin/"
        echo "  ✓ Copied $(basename $file)"
    fi
done

# Copy source and documentation
cp main.cpp "deploy/testing_ci-cp-$VERSION/src/"
cp CMakeLists.txt "deploy/testing_ci-cp-$VERSION/"
[ -f README.md ] && cp README.md "deploy/testing_ci-cp-$VERSION/"
[ -f LICENSE ] && cp LICENSE "deploy/testing_ci-cp-$VERSION/"

# Create archives
cd deploy
echo "Creating archives..."
tar -czf "testing_ci-cp-$VERSION.tar.gz" "testing_ci-cp-$VERSION/"
zip -r "testing_ci-cp-$VERSION.zip" "testing_ci-cp-$VERSION/"

echo "✅ Deployment package ready:"
echo "  📁 deploy/testing_ci-cp-$VERSION/"
echo "  📦 deploy/testing_ci-cp-$VERSION.tar.gz"
echo "  📦 deploy/testing_ci-cp-$VERSION.zip"

---
@echo off
REM scripts/build.bat - Windows build script

echo 🔨 Building testing_ci-cp...

REM Create build directory
if not exist build mkdir build
cd build

REM Configure and build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . --config Release

if %ERRORLEVEL% neq 0 (
    echo ❌ Build failed!
    exit /b 1
)

echo ✅ Build completed successfully!

REM Test the executable
echo 🧪 Testing executable...
if exist "Release\main.exe" (
    Release\main.exe
    echo ✅ main.exe executable works!
) else if exist "Release\testing_ci-cp.exe" (
    Release\testing_ci-cp.exe
    echo ✅ testing_ci-cp.exe executable works!
) else (
    echo ❌ No executable found!
    dir Release
    exit /b 1
)

---
# Makefile - Simple build automation

.PHONY: all build test clean deploy help

# Default target
all: build test

# Build the project
build:
	@echo "🔨 Building project..."
	@mkdir -p build
	@cd build && cmake .. -DCMAKE_BUILD_TYPE=Release
	@cd build && cmake --build . --config Release
	@echo "✅ Build completed!"

# Test the executable
test: build
	@echo "🧪 Testing executable..."
	@if [ -f "build/main" ]; then \
		build/main; \
	elif [ -f "build/testing_ci-cp" ]; then \
		build/testing_ci-cp; \
	elif [ -f "build/Release/main.exe" ]; then \
		build/Release/main.exe; \
	elif [ -f "build/Release/testing_ci-cp.exe" ]; then \
		build/Release/testing_ci-cp.exe; \
	else \
		echo "❌ No executable found!"; \
		ls -la build/; \
		exit 1; \
	fi
	@echo "✅ Test completed!"

# Clean build artifacts
clean:
	@echo "🧹 Cleaning build artifacts..."
	@rm -rf build deploy
	@echo "✅ Clean completed!"

# Prepare deployment package
deploy: build
	@echo "📦 Preparing deployment..."
	@./scripts/deploy.sh
	@echo "✅ Deployment package ready!"

# Show help
help:
	@echo "Available targets:"
	@echo "  build   - Build the project"
	@echo "  test    - Build and test the executable"
	@echo "  clean   - Clean build artifacts"
	@echo "  deploy  - Prepare deployment package"
	@echo "  help    - Show this help message"
