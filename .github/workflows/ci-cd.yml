name: C/C++ CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
        compiler: [gcc, clang]
      fail-fast: false
      max-parallel: 4

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ${{ matrix.compiler }}

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}++

    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build-type }} -j 4

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --parallel 4

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.compiler }}-${{ matrix.build-type }}-binaries
        path: |
          build/**
          !build/**/*.o
        retention-days: 3
        compression-level: 9

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: combined-artifacts
        pattern: '*-Release-binaries'
        merge-multiple: true

    - name: Create release package
      run: |
        mkdir release-package
        find combined-artifacts -type f -executable -exec cp {} release-package \;
        tar czvf release.tar.gz release-package/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release.tar.gz
        body: "Automated build for ${{ github.sha }}"
        draft: false
        prerelease: false
